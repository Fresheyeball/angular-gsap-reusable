// Generated by CoffeeScript 1.4.0

/*
#	Modal script for angular and greensock
#	TODO: write some documentation and comment code
*/


(function() {
  var close, injectdeject, isOpen, modal, modalElem, open, overlayElem, rootScope;

  modal = angular.module('modal', []);

  isOpen = false;

  modalElem = null;

  overlayElem = null;

  rootScope = null;

  angular.element(document).ready(function() {
    var modalScope;
    modalElem = document.getElementById('modal');
    overlayElem = document.getElementById('overlay');
    return modalScope = angular.element(modalElem).scope();
  });

  injectdeject = function(content) {
    if (content == null) {
      content = null;
    }
    modalScope.modalTpl = content;
    return modalScope.$apply();
  };

  open = function(attrs) {
    if (isOpen) {
      return;
    }
    isOpen = true;
    modalElem.style.width = 0;
    modalElem.style.height = 0;
    overlayElem.style.display = 'block';
    TweenLite.to(modalElem, 0.45, {
      height: attrs.height,
      width: attrs.width,
      opacity: 1,
      marginTop: attrs.height / -2,
      marginLeft: attrs.width / -2,
      ease: Back.easeOut
    });
    TweenLite.to(overlayElem, 0.45, {
      opacity: 1
    });
    return injectdeject(attrs.content);
  };

  close = function() {
    if (!isOpen) {
      return;
    }
    isOpen = false;
    TweenLite.to(modalElem, 0.33, {
      width: 0,
      height: 0,
      marginTop: 0,
      marginLeft: 0,
      opacity: 0,
      ease: Cubic.easeOut
    });
    return TweenLite.to(overlayElem, 0.33, {
      opacity: 0,
      onComplete: function() {
        overlayElem.style.display = 'none';
        return injectdeject();
      }
    });
  };

  modal.directive('openmodal', function() {
    return function(scope, element, attrs) {
      return element.bind('click', function() {
        return open(attrs);
      });
    };
  });

  modal.directive('closemodal', function() {
    return function(scope, element, attrs) {
      return element.bind('click', function() {
        return close();
      });
    };
  });

}).call(this);
